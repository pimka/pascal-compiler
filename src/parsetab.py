
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVISIONleftDIVMODleftEQNEQLTELTGTGTEleftORANDAND ASSIGNMENT BEGIN CHAR COLON COMMA COMMENT DIV DIVISION DO DOT DOWNTO ELSE END EQ FOR FUNCTION GT GTE IDENTIFIER IF INTEGER LPAREN LT LTE MINUS MOD NEQ NOT OR PLUS PROCEDURE PROGRAM REAL REPEAT RPAREN SEMICOLON STRING TCHAR THEN TIMES TINTEGER TO TREAL TSTRING UNTIL VAR WHILEprogram : header SEMICOLON block DOTheader : PROGRAM identifierblock : variable_declaration_part procedure_or_function statement_part\n    variable_declaration_part : VAR variable_declaration_list\n     |\n    variable_declaration_list : variable_declaration variable_declaration_list\n     | variable_declaration\n    variable_declaration : identifier COLON type SEMICOLONprocedure_or_function : proc_or_func_declaration SEMICOLON procedure_or_function\n            |  proc_or_func_declaration : procedure_declaration\n           | function_declaration procedure_declaration : procedure_heading SEMICOLON block procedure_heading : PROCEDURE identifier \n    | PROCEDURE identifier LPAREN parameter_list RPAREN function_declaration : function_heading SEMICOLON block function_heading : FUNCTION type\n            | FUNCTION identifier COLON type\n            | FUNCTION identifier LPAREN parameter_list RPAREN COLON type parameter_list : parameter COMMA parameter_list\n    | parameter parameter : identifier COLON type type : TREAL \n    | TINTEGER\n    | TCHAR\n    | TSTRING statement_part : BEGIN statement_sequence ENDstatement_sequence : statement SEMICOLON statement_sequence\n     | statementstatement : assignment_statement\n     | statement_part\n     | if_statement\n     | while_statement\n     | repeat_statement\n     | for_statement\n     | procedure_or_function_call\n     |\n     procedure_or_function_call : identifier LPAREN param_list RPAREN\n    | identifier  param_list : param_list COMMA param\n     | param  param : expression if_statement : IF expression THEN statement ELSE statement\n    | IF expression THEN statement\n    while_statement : WHILE expression DO statementrepeat_statement : REPEAT statement UNTIL expressionfor_statement : FOR assignment_statement TO expression DO statement\n    | FOR assignment_statement DOWNTO expression DO statement\n    assignment_statement : identifier ASSIGNMENT expressionexpression : expression and_or expression_m\n    | expression_m\n     expression_m : expression_s\n    | expression_m sign expression_s expression_s : element \n    | expression_s psign element and_or : AND\n    | OR psign : TIMES\n    | DIVISIONsign : PLUS\n    | MINUS\n    | DIV\n    | MOD\n    | EQ\n    | NEQ\n    | LT\n    | LTE\n    | GT\n    | GTE\n    element : identifier\n    | real\n    | integer\n    | string\n    | char\n    | LPAREN expression RPAREN\n    | NOT element\n    | function_call_inline\n     function_call_inline : identifier LPAREN param_list RPAREN identifier : IDENTIFIER  real : REAL  integer : INTEGER  string : STRING  char : CHAR '
    
_lr_action_items = {'PROGRAM':([0,],[3,]),'$end':([1,10,],[0,-1,]),'SEMICOLON':([2,5,6,12,13,14,15,16,22,23,27,28,30,31,32,33,37,38,39,40,41,42,43,44,45,51,52,56,57,58,62,63,64,65,66,67,68,69,72,73,74,75,76,84,88,92,112,113,118,121,123,124,125,126,128,129,130,137,138,139,140,141,142,143,144,],[4,-2,-79,24,-11,-12,25,26,-3,-37,-14,-17,-23,-24,-25,-26,58,-30,-31,-32,-33,-34,-35,-36,-39,-13,-16,86,-27,-37,-51,-52,-54,-70,-71,-72,-73,-74,-77,-80,-81,-82,-83,-18,-49,-37,-76,-37,-15,-38,-44,-50,-53,-55,-75,-45,-46,-37,-78,-37,-37,-19,-43,-47,-48,]),'IDENTIFIER':([3,9,17,18,20,23,46,47,48,49,53,55,58,59,60,70,71,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,113,114,115,116,119,122,137,139,140,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-8,6,6,-56,-57,6,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,6,-58,-59,6,6,6,6,6,6,6,6,6,6,]),'VAR':([4,25,26,],[9,9,9,]),'PROCEDURE':([4,8,19,20,24,25,26,34,86,],[-5,17,-4,-7,17,-5,-5,-6,-8,]),'FUNCTION':([4,8,19,20,24,25,26,34,86,],[-5,18,-4,-7,18,-5,-5,-6,-8,]),'BEGIN':([4,8,11,19,20,23,24,25,26,34,48,50,58,86,92,113,137,139,140,],[-5,-10,23,-4,-7,23,-10,-5,-5,-6,23,-9,23,-8,23,23,23,23,23,]),'COLON':([6,21,29,81,120,],[-79,35,54,117,135,]),'LPAREN':([6,27,29,45,46,47,59,60,65,70,71,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,115,116,122,],[-79,53,55,60,70,70,70,70,110,70,70,70,-56,-57,70,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,70,-58,-59,70,70,70,70,70,]),'ASSIGNMENT':([6,45,80,],[-79,59,59,]),'END':([6,23,36,37,38,39,40,41,42,43,44,45,57,58,62,63,64,65,66,67,68,69,72,73,74,75,76,87,88,92,112,113,121,123,124,125,126,128,129,130,137,138,139,140,142,143,144,],[-79,-37,57,-29,-30,-31,-32,-33,-34,-35,-36,-39,-27,-37,-51,-52,-54,-70,-71,-72,-73,-74,-77,-80,-81,-82,-83,-28,-49,-37,-76,-37,-38,-44,-50,-53,-55,-75,-45,-46,-37,-78,-37,-37,-43,-47,-48,]),'TIMES':([6,63,64,65,66,67,68,69,72,73,74,75,76,112,125,126,128,138,],[-79,108,-54,-70,-71,-72,-73,-74,-77,-80,-81,-82,-83,-76,108,-55,-75,-78,]),'DIVISION':([6,63,64,65,66,67,68,69,72,73,74,75,76,112,125,126,128,138,],[-79,109,-54,-70,-71,-72,-73,-74,-77,-80,-81,-82,-83,-76,109,-55,-75,-78,]),'PLUS':([6,62,63,64,65,66,67,68,69,72,73,74,75,76,112,124,125,126,128,138,],[-79,97,-52,-54,-70,-71,-72,-73,-74,-77,-80,-81,-82,-83,-76,97,-53,-55,-75,-78,]),'MINUS':([6,62,63,64,65,66,67,68,69,72,73,74,75,76,112,124,125,126,128,138,],[-79,98,-52,-54,-70,-71,-72,-73,-74,-77,-80,-81,-82,-83,-76,98,-53,-55,-75,-78,]),'DIV':([6,62,63,64,65,66,67,68,69,72,73,74,75,76,112,124,125,126,128,138,],[-79,99,-52,-54,-70,-71,-72,-73,-74,-77,-80,-81,-82,-83,-76,99,-53,-55,-75,-78,]),'MOD':([6,62,63,64,65,66,67,68,69,72,73,74,75,76,112,124,125,126,128,138,],[-79,100,-52,-54,-70,-71,-72,-73,-74,-77,-80,-81,-82,-83,-76,100,-53,-55,-75,-78,]),'EQ':([6,62,63,64,65,66,67,68,69,72,73,74,75,76,112,124,125,126,128,138,],[-79,101,-52,-54,-70,-71,-72,-73,-74,-77,-80,-81,-82,-83,-76,101,-53,-55,-75,-78,]),'NEQ':([6,62,63,64,65,66,67,68,69,72,73,74,75,76,112,124,125,126,128,138,],[-79,102,-52,-54,-70,-71,-72,-73,-74,-77,-80,-81,-82,-83,-76,102,-53,-55,-75,-78,]),'LT':([6,62,63,64,65,66,67,68,69,72,73,74,75,76,112,124,125,126,128,138,],[-79,103,-52,-54,-70,-71,-72,-73,-74,-77,-80,-81,-82,-83,-76,103,-53,-55,-75,-78,]),'LTE':([6,62,63,64,65,66,67,68,69,72,73,74,75,76,112,124,125,126,128,138,],[-79,104,-52,-54,-70,-71,-72,-73,-74,-77,-80,-81,-82,-83,-76,104,-53,-55,-75,-78,]),'GT':([6,62,63,64,65,66,67,68,69,72,73,74,75,76,112,124,125,126,128,138,],[-79,105,-52,-54,-70,-71,-72,-73,-74,-77,-80,-81,-82,-83,-76,105,-53,-55,-75,-78,]),'GTE':([6,62,63,64,65,66,67,68,69,72,73,74,75,76,112,124,125,126,128,138,],[-79,106,-52,-54,-70,-71,-72,-73,-74,-77,-80,-81,-82,-83,-76,106,-53,-55,-75,-78,]),'THEN':([6,61,62,63,64,65,66,67,68,69,72,73,74,75,76,112,124,125,126,128,138,],[-79,92,-51,-52,-54,-70,-71,-72,-73,-74,-77,-80,-81,-82,-83,-76,-50,-53,-55,-75,-78,]),'AND':([6,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,88,91,111,112,124,125,126,128,130,131,132,138,],[-79,94,-51,-52,-54,-70,-71,-72,-73,-74,-77,-80,-81,-82,-83,94,94,94,94,-76,-50,-53,-55,-75,94,94,94,-78,]),'OR':([6,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,88,91,111,112,124,125,126,128,130,131,132,138,],[-79,95,-51,-52,-54,-70,-71,-72,-73,-74,-77,-80,-81,-82,-83,95,95,95,95,-76,-50,-53,-55,-75,95,95,95,-78,]),'DO':([6,62,63,64,65,66,67,68,69,72,73,74,75,76,77,112,124,125,126,128,131,132,138,],[-79,-51,-52,-54,-70,-71,-72,-73,-74,-77,-80,-81,-82,-83,113,-76,-50,-53,-55,-75,139,140,-78,]),'UNTIL':([6,38,39,40,41,42,43,44,45,48,57,62,63,64,65,66,67,68,69,72,73,74,75,76,78,88,92,112,113,121,123,124,125,126,128,129,130,137,138,139,140,142,143,144,],[-79,-30,-31,-32,-33,-34,-35,-36,-39,-37,-27,-51,-52,-54,-70,-71,-72,-73,-74,-77,-80,-81,-82,-83,114,-49,-37,-76,-37,-38,-44,-50,-53,-55,-75,-45,-46,-37,-78,-37,-37,-43,-47,-48,]),'TO':([6,62,63,64,65,66,67,68,69,72,73,74,75,76,79,88,112,124,125,126,128,138,],[-79,-51,-52,-54,-70,-71,-72,-73,-74,-77,-80,-81,-82,-83,115,-49,-76,-50,-53,-55,-75,-78,]),'DOWNTO':([6,62,63,64,65,66,67,68,69,72,73,74,75,76,79,88,112,124,125,126,128,138,],[-79,-51,-52,-54,-70,-71,-72,-73,-74,-77,-80,-81,-82,-83,116,-49,-76,-50,-53,-55,-75,-78,]),'ELSE':([6,38,39,40,41,42,43,44,45,57,62,63,64,65,66,67,68,69,72,73,74,75,76,88,92,112,113,121,123,124,125,126,128,129,130,137,138,139,140,142,143,144,],[-79,-30,-31,-32,-33,-34,-35,-36,-39,-27,-51,-52,-54,-70,-71,-72,-73,-74,-77,-80,-81,-82,-83,-49,-37,-76,-37,-38,137,-50,-53,-55,-75,-45,-46,-37,-78,-37,-37,-43,-47,-48,]),'RPAREN':([6,30,31,32,33,62,63,64,65,66,67,68,69,72,73,74,75,76,82,83,85,89,90,91,111,112,124,125,126,127,128,133,134,136,138,],[-79,-23,-24,-25,-26,-51,-52,-54,-70,-71,-72,-73,-74,-77,-80,-81,-82,-83,118,-21,120,121,-41,-42,128,-76,-50,-53,-55,138,-75,-22,-20,-40,-78,]),'COMMA':([6,30,31,32,33,62,63,64,65,66,67,68,69,72,73,74,75,76,83,89,90,91,112,124,125,126,127,128,133,136,138,],[-79,-23,-24,-25,-26,-51,-52,-54,-70,-71,-72,-73,-74,-77,-80,-81,-82,-83,119,122,-41,-42,-76,-50,-53,-55,122,-75,-22,-40,-78,]),'DOT':([7,22,57,],[10,-3,-27,]),'TREAL':([18,35,54,117,135,],[30,30,30,30,30,]),'TINTEGER':([18,35,54,117,135,],[31,31,31,31,31,]),'TCHAR':([18,35,54,117,135,],[32,32,32,32,32,]),'TSTRING':([18,35,54,117,135,],[33,33,33,33,33,]),'IF':([23,48,58,92,113,137,139,140,],[46,46,46,46,46,46,46,46,]),'WHILE':([23,48,58,92,113,137,139,140,],[47,47,47,47,47,47,47,47,]),'REPEAT':([23,48,58,92,113,137,139,140,],[48,48,48,48,48,48,48,48,]),'FOR':([23,48,58,92,113,137,139,140,],[49,49,49,49,49,49,49,49,]),'NOT':([46,47,59,60,70,71,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,115,116,122,],[71,71,71,71,71,71,71,-56,-57,71,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,71,-58,-59,71,71,71,71,71,]),'REAL':([46,47,59,60,70,71,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,115,116,122,],[73,73,73,73,73,73,73,-56,-57,73,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,73,-58,-59,73,73,73,73,73,]),'INTEGER':([46,47,59,60,70,71,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,115,116,122,],[74,74,74,74,74,74,74,-56,-57,74,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,74,-58,-59,74,74,74,74,74,]),'STRING':([46,47,59,60,70,71,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,115,116,122,],[75,75,75,75,75,75,75,-56,-57,75,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,75,-58,-59,75,75,75,75,75,]),'CHAR':([46,47,59,60,70,71,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,115,116,122,],[76,76,76,76,76,76,76,-56,-57,76,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,76,-58,-59,76,76,76,76,76,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'header':([0,],[2,]),'identifier':([3,9,17,18,20,23,46,47,48,49,53,55,58,59,60,70,71,92,93,96,107,110,113,114,115,116,119,122,137,139,140,],[5,21,27,29,21,45,65,65,45,80,81,81,45,65,65,65,65,45,65,65,65,65,45,65,65,65,81,65,45,45,45,]),'block':([4,25,26,],[7,51,52,]),'variable_declaration_part':([4,25,26,],[8,8,8,]),'procedure_or_function':([8,24,],[11,50,]),'proc_or_func_declaration':([8,24,],[12,12,]),'procedure_declaration':([8,24,],[13,13,]),'function_declaration':([8,24,],[14,14,]),'procedure_heading':([8,24,],[15,15,]),'function_heading':([8,24,],[16,16,]),'variable_declaration_list':([9,20,],[19,34,]),'variable_declaration':([9,20,],[20,20,]),'statement_part':([11,23,48,58,92,113,137,139,140,],[22,39,39,39,39,39,39,39,39,]),'type':([18,35,54,117,135,],[28,56,84,133,141,]),'statement_sequence':([23,58,],[36,87,]),'statement':([23,48,58,92,113,137,139,140,],[37,78,37,123,129,142,143,144,]),'assignment_statement':([23,48,49,58,92,113,137,139,140,],[38,38,79,38,38,38,38,38,38,]),'if_statement':([23,48,58,92,113,137,139,140,],[40,40,40,40,40,40,40,40,]),'while_statement':([23,48,58,92,113,137,139,140,],[41,41,41,41,41,41,41,41,]),'repeat_statement':([23,48,58,92,113,137,139,140,],[42,42,42,42,42,42,42,42,]),'for_statement':([23,48,58,92,113,137,139,140,],[43,43,43,43,43,43,43,43,]),'procedure_or_function_call':([23,48,58,92,113,137,139,140,],[44,44,44,44,44,44,44,44,]),'expression':([46,47,59,60,70,110,114,115,116,122,],[61,77,88,91,111,91,130,131,132,91,]),'expression_m':([46,47,59,60,70,93,110,114,115,116,122,],[62,62,62,62,62,124,62,62,62,62,62,]),'expression_s':([46,47,59,60,70,93,96,110,114,115,116,122,],[63,63,63,63,63,63,125,63,63,63,63,63,]),'element':([46,47,59,60,70,71,93,96,107,110,114,115,116,122,],[64,64,64,64,64,112,64,64,126,64,64,64,64,64,]),'real':([46,47,59,60,70,71,93,96,107,110,114,115,116,122,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'integer':([46,47,59,60,70,71,93,96,107,110,114,115,116,122,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'string':([46,47,59,60,70,71,93,96,107,110,114,115,116,122,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'char':([46,47,59,60,70,71,93,96,107,110,114,115,116,122,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'function_call_inline':([46,47,59,60,70,71,93,96,107,110,114,115,116,122,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'parameter_list':([53,55,119,],[82,85,134,]),'parameter':([53,55,119,],[83,83,83,]),'param_list':([60,110,],[89,127,]),'param':([60,110,122,],[90,90,136,]),'and_or':([61,77,88,91,111,130,131,132,],[93,93,93,93,93,93,93,93,]),'sign':([62,124,],[96,96,]),'psign':([63,125,],[107,107,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> header SEMICOLON block DOT','program',4,'p_program_start','rules.py',15),
  ('header -> PROGRAM identifier','header',2,'p_header','rules.py',20),
  ('block -> variable_declaration_part procedure_or_function statement_part','block',3,'p_block','rules.py',25),
  ('variable_declaration_part -> VAR variable_declaration_list','variable_declaration_part',2,'p_variable_declaration_part','rules.py',31),
  ('variable_declaration_part -> <empty>','variable_declaration_part',0,'p_variable_declaration_part','rules.py',32),
  ('variable_declaration_list -> variable_declaration variable_declaration_list','variable_declaration_list',2,'p_variable_declaration_list','rules.py',39),
  ('variable_declaration_list -> variable_declaration','variable_declaration_list',1,'p_variable_declaration_list','rules.py',40),
  ('variable_declaration -> identifier COLON type SEMICOLON','variable_declaration',4,'p_variable_declaration','rules.py',50),
  ('procedure_or_function -> proc_or_func_declaration SEMICOLON procedure_or_function','procedure_or_function',3,'p_procedure_or_function','rules.py',55),
  ('procedure_or_function -> <empty>','procedure_or_function',0,'p_procedure_or_function','rules.py',56),
  ('proc_or_func_declaration -> procedure_declaration','proc_or_func_declaration',1,'p_proc_or_func_declaration','rules.py',63),
  ('proc_or_func_declaration -> function_declaration','proc_or_func_declaration',1,'p_proc_or_func_declaration','rules.py',64),
  ('procedure_declaration -> procedure_heading SEMICOLON block','procedure_declaration',3,'p_procedure_declaration','rules.py',69),
  ('procedure_heading -> PROCEDURE identifier','procedure_heading',2,'p_procedure_heading','rules.py',74),
  ('procedure_heading -> PROCEDURE identifier LPAREN parameter_list RPAREN','procedure_heading',5,'p_procedure_heading','rules.py',75),
  ('function_declaration -> function_heading SEMICOLON block','function_declaration',3,'p_function_declaration','rules.py',84),
  ('function_heading -> FUNCTION type','function_heading',2,'p_function_heading','rules.py',89),
  ('function_heading -> FUNCTION identifier COLON type','function_heading',4,'p_function_heading','rules.py',90),
  ('function_heading -> FUNCTION identifier LPAREN parameter_list RPAREN COLON type','function_heading',7,'p_function_heading','rules.py',91),
  ('parameter_list -> parameter COMMA parameter_list','parameter_list',3,'p_parameter_list','rules.py',101),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','rules.py',102),
  ('parameter -> identifier COLON type','parameter',3,'p_parameter','rules.py',110),
  ('type -> TREAL','type',1,'p_type','rules.py',115),
  ('type -> TINTEGER','type',1,'p_type','rules.py',116),
  ('type -> TCHAR','type',1,'p_type','rules.py',117),
  ('type -> TSTRING','type',1,'p_type','rules.py',118),
  ('statement_part -> BEGIN statement_sequence END','statement_part',3,'p_statement_part','rules.py',123),
  ('statement_sequence -> statement SEMICOLON statement_sequence','statement_sequence',3,'p_statement_sequence','rules.py',128),
  ('statement_sequence -> statement','statement_sequence',1,'p_statement_sequence','rules.py',129),
  ('statement -> assignment_statement','statement',1,'p_statement','rules.py',137),
  ('statement -> statement_part','statement',1,'p_statement','rules.py',138),
  ('statement -> if_statement','statement',1,'p_statement','rules.py',139),
  ('statement -> while_statement','statement',1,'p_statement','rules.py',140),
  ('statement -> repeat_statement','statement',1,'p_statement','rules.py',141),
  ('statement -> for_statement','statement',1,'p_statement','rules.py',142),
  ('statement -> procedure_or_function_call','statement',1,'p_statement','rules.py',143),
  ('statement -> <empty>','statement',0,'p_statement','rules.py',144),
  ('procedure_or_function_call -> identifier LPAREN param_list RPAREN','procedure_or_function_call',4,'p_procedure_or_function_call','rules.py',151),
  ('procedure_or_function_call -> identifier','procedure_or_function_call',1,'p_procedure_or_function_call','rules.py',152),
  ('param_list -> param_list COMMA param','param_list',3,'p_param_list','rules.py',161),
  ('param_list -> param','param_list',1,'p_param_list','rules.py',162),
  ('param -> expression','param',1,'p_param','rules.py',170),
  ('if_statement -> IF expression THEN statement ELSE statement','if_statement',6,'p_if_statement','rules.py',175),
  ('if_statement -> IF expression THEN statement','if_statement',4,'p_if_statement','rules.py',176),
  ('while_statement -> WHILE expression DO statement','while_statement',4,'p_while_statement','rules.py',186),
  ('repeat_statement -> REPEAT statement UNTIL expression','repeat_statement',4,'p_repeat_statement','rules.py',191),
  ('for_statement -> FOR assignment_statement TO expression DO statement','for_statement',6,'p_for_statement','rules.py',196),
  ('for_statement -> FOR assignment_statement DOWNTO expression DO statement','for_statement',6,'p_for_statement','rules.py',197),
  ('assignment_statement -> identifier ASSIGNMENT expression','assignment_statement',3,'p_assignment_statement','rules.py',203),
  ('expression -> expression and_or expression_m','expression',3,'p_expression','rules.py',208),
  ('expression -> expression_m','expression',1,'p_expression','rules.py',209),
  ('expression_m -> expression_s','expression_m',1,'p_expression_m','rules.py',218),
  ('expression_m -> expression_m sign expression_s','expression_m',3,'p_expression_m','rules.py',219),
  ('expression_s -> element','expression_s',1,'p_expression_s','rules.py',227),
  ('expression_s -> expression_s psign element','expression_s',3,'p_expression_s','rules.py',228),
  ('and_or -> AND','and_or',1,'p_and_or','rules.py',236),
  ('and_or -> OR','and_or',1,'p_and_or','rules.py',237),
  ('psign -> TIMES','psign',1,'p_psign','rules.py',242),
  ('psign -> DIVISION','psign',1,'p_psign','rules.py',243),
  ('sign -> PLUS','sign',1,'p_sign','rules.py',248),
  ('sign -> MINUS','sign',1,'p_sign','rules.py',249),
  ('sign -> DIV','sign',1,'p_sign','rules.py',250),
  ('sign -> MOD','sign',1,'p_sign','rules.py',251),
  ('sign -> EQ','sign',1,'p_sign','rules.py',252),
  ('sign -> NEQ','sign',1,'p_sign','rules.py',253),
  ('sign -> LT','sign',1,'p_sign','rules.py',254),
  ('sign -> LTE','sign',1,'p_sign','rules.py',255),
  ('sign -> GT','sign',1,'p_sign','rules.py',256),
  ('sign -> GTE','sign',1,'p_sign','rules.py',257),
  ('element -> identifier','element',1,'p_element','rules.py',263),
  ('element -> real','element',1,'p_element','rules.py',264),
  ('element -> integer','element',1,'p_element','rules.py',265),
  ('element -> string','element',1,'p_element','rules.py',266),
  ('element -> char','element',1,'p_element','rules.py',267),
  ('element -> LPAREN expression RPAREN','element',3,'p_element','rules.py',268),
  ('element -> NOT element','element',2,'p_element','rules.py',269),
  ('element -> function_call_inline','element',1,'p_element','rules.py',270),
  ('function_call_inline -> identifier LPAREN param_list RPAREN','function_call_inline',4,'p_function_call_inline','rules.py',283),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier','rules.py',288),
  ('real -> REAL','real',1,'p_real','rules.py',293),
  ('integer -> INTEGER','integer',1,'p_integer','rules.py',298),
  ('string -> STRING','string',1,'p_string','rules.py',303),
  ('char -> CHAR','char',1,'p_char','rules.py',308),
]
